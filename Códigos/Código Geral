#include <Servo.h> //Biblioteca de servos

Servo servo1; // servo responsavel pelo movimento azimutal 
Servo servo2; // servo responsavel pelo movimento de declinacao 

//4 LDR's (lembrando que a comparacao entre eles e feita em par para determinar a incidencia solar):
int ldr_E = A2; //LDR da esquerda
int ldr_D = A3; //LDR da direita
int ldr_C = A0; //LDR de cima
int ldr_B = A1; //LDR da baixo

//Posicao inicial dos servos
int posicao_servo1 = 90; // a posição do servo é determinada de acordo com o seu posicionamento na estrutura e com o ângulo de movimento necessário da haste do servo 
int posicao_servo2 = 135;

//Variaveis para guardar valores
//analogicos dos pinos

int val_E;
int val_D;
int val_C;
int val_B;

//tempo de delay dos servos
int delay_movimento= 100;

void setup() 
{
  // Determinar pino dos servos 1 e 2
  servo1.attach(10);
  servo2.attach(9); 
}

void loop() 
{
  // leitura analogica do LDR de acordo
  //com a inciedencia solar
  val_E =analogRead(ldr_E);
  val_D =analogRead(ldr_D);
  val_C =analogRead(ldr_C);
  val_B =analogRead(ldr_B);

  //comparacao dos ldr's para estabilidade
  if (val_E - val_D > 2 || val_E - val_D < -2)
  {
    if (val_E > val_D && posicao_servo1 > 0)
      {
        posicao_servo1--;
      }
    if (val_D > val_E && posicao_servo1 < 180) 
      {
        posicao_servo1++;
      }
  }

  //comparacao dos ldr's para estabilidade
  if (val_C - val_B > 2 || val_C - val_B < -2)
  {
    if (val_C > val_B && posicao_servo2 > 90)
      {
        posicao_servo2--;
      }
    if (val_B > val_C && posicao_servo2 < 180) 
      {
        posicao_servo2++;
      }
  }

  //posicao de acordo com o valor calculado:
  servo1.write(posicao_servo1);
  servo2.write(posicao_servo2);

  //Delay para o servo se mover ate a posicao
  delay(delay_movimento);
}

#include <msp430g2553.h>
#include <legacymsp430.h>

#define SERVO BIT6 // Seta o servomotor na porta P1.6
#define PERIODO 20000
#define MIN_T  500 //1000
#define MAX_T 2500 //2000
#define STEP_T  50

int main(void)
{
    WDTCTL = WDTPW + WDTHOLD;
    BCSCTL1 = CALBC1_1MHZ; // Calibração do DCO
    DCOCTL = CALDCO_1MHZ;  /Calibração do DCO
    P1DIR |= SERVO; // 00000000 + 01000000; Setar P1DIR = P1.6
    P1SEL |= SERVO; // 00000000 + 01000000; Configurar P1.6 como periferico TA0.1
    P1SEL2 &= ~SERVO; // acho que isso é igual a zero.
    TACCR0 = PERIODO-1; // Define o periodo do PWM
    TACCR1 = MIN_T; 
    TACCTL1 = OUTMOD_7; // O TACCTL1 controla o comportamento da saída do timerR0_A, set/reset
    TACTL = TASSEL_2 + ID_0 + MC_1 + TAIE; // Informações sobre o clk e o modo de operação do timer: TASSEL_2 = MCLK,
    //MC_1 = CONTAGEM PROGRESSIVA ATÉ O TACCR1
    _BIS_SR(LPM0_bits + GIE);
    return 0; 
}

interrupt(TIMER0_A1_VECTOR) TA0_ISR(void)
{
    static int direcao = 0;
    // Aumentar o ciclo de trabalho ate o maximo
    if(direcao==0)
    {
        TACCR1 += STEP_T;
        if(TACCR1>=MAX_T)
        {
            TACCR1 = MAX_T;
            direcao = 1;
        }
    }
    // Diminuir o ciclo de trabalho ate o minimo
    else if(direcao==1)
    {
        TACCR1 -= STEP_T;
        if(TACCR1<=MIN_T)
        {
            TACCR1 = MIN_T;
            direcao = 0;
        }
    }
    TACTL &= ~TAIFG;
}
